From 77b2fdb7d3519dc89f4a99f472f037611449012d Mon Sep 17 00:00:00 2001
From: robcore <robpatershuk@gmail.com>
Date: Thu, 12 Dec 2019 19:41:53 -0700
Subject: [PATCH] add mount namespace support for magisk hide

---
 ...c-Add-support-for-the-mount-namespace.diff | 96 +++++++++++++++++++
 fs/namespace.c                                | 54 +++++++++++
 fs/proc/namespaces.c                          |  1 +
 include/linux/proc_fs.h                       |  1 +
 4 files changed, 152 insertions(+)
 create mode 100644 6-8-ns-proc-Add-support-for-the-mount-namespace.diff

diff --git a/6-8-ns-proc-Add-support-for-the-mount-namespace.diff b/6-8-ns-proc-Add-support-for-the-mount-namespace.diff
new file mode 100644
index 000000000..2c507b768
--- /dev/null
+++ b/6-8-ns-proc-Add-support-for-the-mount-namespace.diff
@@ -0,0 +1,96 @@
+diff --git a/fs/namespace.c b/fs/namespace.c
+index a72eaab..ed11bac 100644
+--- a/fs/namespace.c
++++ b/fs/namespace.c
+@@ -32,6 +32,7 @@
+ #include <linux/idr.h>
+ #include <linux/fs_struct.h>
+ #include <linux/fsnotify.h>
++#include <linux/proc_fs.h>
+ #include <asm/uaccess.h>
+ #include <asm/unistd.h>
+ #include "pnode.h"
+@@ -2418,3 +2419,59 @@ void put_mnt_ns(struct mnt_namespace *ns)
+ 	kfree(ns);
+ }
+ EXPORT_SYMBOL(put_mnt_ns);
++
++
++static void *mntns_get(struct task_struct *task)
++{
++	struct mnt_namespace *ns;
++	rcu_read_lock();
++	ns = task->nsproxy->mnt_ns;
++	get_mnt_ns(ns);
++	rcu_read_unlock();
++	return ns;
++}
++
++static void mntns_put(void *ns)
++{
++	put_mnt_ns(ns);
++}
++
++static int mntns_install(struct nsproxy *nsproxy, void *ns)
++{
++	struct fs_struct *fs = current->fs;
++	struct mnt_namespace *mnt_ns = ns;
++	struct path root;
++
++	if (fs->users != 1)
++		return -EINVAL;
++
++	get_mnt_ns(mnt_ns);
++	put_mnt_ns(nsproxy->mnt_ns);
++	nsproxy->mnt_ns = mnt_ns;
++
++	/* Find the root */
++	root.mnt    = mnt_ns->root;
++	root.dentry = mnt_ns->root->mnt_root;
++	path_get(&root);
++	while(d_mountpoint(root.dentry) && follow_down(&root))
++		;
++
++	/* Update the pwd and root */
++	path_get(&root);
++	path_get(&root);
++	path_put(&fs->root);
++	path_put(&fs->pwd);
++	fs->root = root;
++	fs->pwd  = root;
++	path_put(&root);
++
++	return 0;
++}
++
++const struct proc_ns_operations mntns_operations = {
++	.name		= PROC_NSNAME("mnt"),
++	.get		= mntns_get,
++	.put		= mntns_put,
++	.install	= mntns_install,
++};
++
+diff --git a/fs/proc/namespaces.c b/fs/proc/namespaces.c
+index 2f503b5..c5956ad 100644
+--- a/fs/proc/namespaces.c
++++ b/fs/proc/namespaces.c
+@@ -25,6 +25,7 @@ static const struct proc_ns_operations *ns_entries[] = {
+ #ifdef CONFIG_IPC_NS
+ 	&ipcns_operations,
+ #endif
++	&mntns_operations,
+ };
+ 
+ static const struct file_operations ns_file_operations = {
+diff --git a/include/linux/proc_fs.h b/include/linux/proc_fs.h
+index 9a9ef31..8a260b0 100644
+--- a/include/linux/proc_fs.h
++++ b/include/linux/proc_fs.h
+@@ -265,6 +265,7 @@ struct proc_ns_operations {
+ extern const struct proc_ns_operations netns_operations;
+ extern const struct proc_ns_operations utsns_operations;
+ extern const struct proc_ns_operations ipcns_operations;
++extern const struct proc_ns_operations mntns_operations;
+ extern struct file *proc_ns_fget(int fd);
+ 
+ union proc_op {
diff --git a/fs/namespace.c b/fs/namespace.c
index f7be8d9c1..c121952fb 100755
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -2610,6 +2610,60 @@ void put_mnt_ns(struct mnt_namespace *ns)
 	kfree(ns);
 }
 
+static void *mntns_get(struct task_struct *task)
+{
+	struct mnt_namespace *ns;
+	rcu_read_lock();
+	ns = task->nsproxy->mnt_ns;
+	get_mnt_ns(ns);
+	rcu_read_unlock();
+	return ns;
+}
+
+static void mntns_put(void *ns)
+{
+	put_mnt_ns(ns);
+}
+
+static int mntns_install(struct nsproxy *nsproxy, void *ns)
+{
+	struct fs_struct *fs = current->fs;
+	struct mnt_namespace *mnt_ns = ns;
+	struct path root;
+
+	if (fs->users != 1)
+		return -EINVAL;
+
+	get_mnt_ns(mnt_ns);
+	put_mnt_ns(nsproxy->mnt_ns);
+	nsproxy->mnt_ns = mnt_ns;
+
+	/* Find the root */
+	root.mnt    = mnt_ns->root;
+	root.dentry = mnt_ns->root->mnt_root;
+	path_get(&root);
+	while(d_mountpoint(root.dentry) && follow_down(&root))
+		;
+
+	/* Update the pwd and root */
+	path_get(&root);
+	path_get(&root);
+	path_put(&fs->root);
+	path_put(&fs->pwd);
+	fs->root = root;
+	fs->pwd  = root;
+	path_put(&root);
+
+	return 0;
+}
+
+const struct proc_ns_operations mntns_operations = {
+	.name		= PROC_NSNAME("mnt"),
+	.get		= mntns_get,
+	.put		= mntns_put,
+	.install	= mntns_install,
+};
+
 struct vfsmount *kern_mount_data(struct file_system_type *type, void *data)
 {
 	struct vfsmount *mnt;
diff --git a/fs/proc/namespaces.c b/fs/proc/namespaces.c
index 0d9e23a39..57cd107ce 100755
--- a/fs/proc/namespaces.c
+++ b/fs/proc/namespaces.c
@@ -24,6 +24,7 @@ static const struct proc_ns_operations *ns_entries[] = {
 #ifdef CONFIG_IPC_NS
 	&ipcns_operations,
 #endif
+	&mntns_operations,
 };
 
 static const struct file_operations ns_file_operations = {
diff --git a/include/linux/proc_fs.h b/include/linux/proc_fs.h
index 85c507306..f72012138 100755
--- a/include/linux/proc_fs.h
+++ b/include/linux/proc_fs.h
@@ -251,6 +251,7 @@ struct proc_ns_operations {
 extern const struct proc_ns_operations netns_operations;
 extern const struct proc_ns_operations utsns_operations;
 extern const struct proc_ns_operations ipcns_operations;
+extern const struct proc_ns_operations mntns_operations;
 
 union proc_op {
 	int (*proc_get_link)(struct dentry *, struct path *);
